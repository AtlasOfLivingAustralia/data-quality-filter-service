
buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:$gormVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "2.4.0-rc2"
}


version "1.3.0-SNAPSHOT"
group "au.org.ala"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"maven-publish"

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases' }"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        mavenJar(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.web
        }
    }
}


repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    def noCache = {
        exclude group: 'org.grails.plugins', module: 'cache'
        exclude group: 'org.ehcache', module: 'ehcache'
    }
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.18.Final"
    compile "org.hibernate:hibernate-ehcache:5.4.18.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"

    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    compile "org.apache.commons:commons-lang3:3.7"
    compile "org.apache.commons:commons-text:1.3"
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.2'
    compile "com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20180219.1"
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '8.5.1'

    // Swagger
    compile 'au.org.ala.plugins:openapi:1.1.0'

    compile "jakarta.ws.rs:jakarta.ws.rs-api:2.1.6"

    // load external config files
    compile 'org.grails.plugins:external-config:2.0.0'
    // for CSV parsing
    compile "net.sf.supercsv:super-csv:2.1.0"
    compile 'org.grails.plugins:http-builder-helper:1.0.2.ALA'

    // ALA Plugins
    compile "org.grails.plugins:ala-bootstrap3:4.1.0", noCache
    compile "au.org.ala.plugins.grails:downloads-plugin:3.0-SNAPSHOT", noCache
    compile "org.grails.plugins:ala-admin-plugin:2.3.0", noCache
    compile "org.grails.plugins:ala-auth:5.1.1", noCache
    compile "au.org.ala.plugins.grails:images-client-plugin:1.4", noCache
    compile "au.org.ala.plugins.grails:ala-charts-plugin:2.2", noCache
}

webdriverBinaries {
    chromedriver '2.45.0'
    geckodriver '0.24.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    sourceResources sourceSets.main
}

assets {
    minifyJs = true
    minifyCss = true
}
